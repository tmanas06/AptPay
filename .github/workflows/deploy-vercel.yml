name: Deploy AptPay to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        
    - name: Configure Expo for web
      run: |
        # Update app.json to use metro bundler for web
        node -e "
        const fs = require('fs');
        const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));
        if (!appJson.expo.web) appJson.expo.web = {};
        appJson.expo.web.bundler = 'metro';
        appJson.expo.web.name = 'AptPay';
        appJson.expo.web.shortName = 'AptPay';
        appJson.expo.web.lang = 'en';
        appJson.expo.web.scope = '/';
        appJson.expo.web.themeColor = '#007AFF';
        appJson.expo.web.description = 'Advanced DeFi trading platform on Aptos blockchain';
        appJson.expo.web.dir = 'ltr';
        appJson.expo.web.display = 'standalone';
        appJson.expo.web.orientation = 'portrait';
        appJson.expo.web.startUrl = '/';
        appJson.expo.web.backgroundColor = '#f8f9fa';
        fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2));
        console.log('Updated app.json for web build');
        "
        
    - name: Build AptPay for web
      run: |
        echo "üöÄ Building AptPay for Vercel with Expo Web..."
        
        # Clean previous builds
        rm -rf dist web-build
        
        # Build with Expo export
        echo "üì± Building with Expo export..."
        npx expo export --platform web --output-dir dist || {
          echo "‚ö†Ô∏è Expo export had errors, but checking if build was created..."
          if [ -d "dist" ] && ([ -d "dist/bundles" ] || [ -f "dist/index.html" ]); then
            echo "‚úÖ Build was created despite errors - continuing..."
          else
            echo "‚ùå Build failed completely"
            exit 1
          fi
        }
        
        # Check if index.html exists, if not create it
        if [ ! -f "dist/index.html" ]; then
          echo "üìù Creating index.html for Metro bundler project..."
          
          # Find the actual bundle file
          BUNDLE_FILE="index.web.js"
          if [ -d "dist/bundles" ]; then
            BUNDLE_FILE=$(find dist/bundles -name "*.js" | head -1 | xargs basename)
          fi
          echo "Found bundle file: $BUNDLE_FILE"
          
          # Create index.html
          cat > dist/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>AptPay - DeFi Trading Platform</title>
  <meta name="description" content="Advanced DeFi trading platform on Aptos blockchain">
  <meta name="theme-color" content="#007AFF">
  <link rel="icon" href="./assets/favicon.png">
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
      background: #f8f9fa;
    }
    
    #root {
      width: 100%;
      height: 100vh;
    }
    
    .loading {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: #f8f9fa;
    }
    
    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #e9ecef;
      border-top: 4px solid #007AFF;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div id="root">
    <div class="loading">
      <div class="spinner"></div>
    </div>
  </div>
  
  <script>
    // Metro bundler setup for AptPay
    window.__expo = window.__expo || {};
    window.__expo.web = window.__expo.web || {};
    
    // Set up the Metro bundler environment
    window.__expo.web.bundleUrl = './bundles/$BUNDLE_FILE';
    
    // Load the Metro bundle
    const script = document.createElement('script');
    script.src = './bundles/$BUNDLE_FILE';
    script.onload = () => {
      console.log('AptPay Metro bundle loaded successfully');
    };
    script.onerror = (error) => {
      console.error('Failed to load AptPay bundle:', error);
      document.getElementById('root').innerHTML = \`
        <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; text-align: center; padding: 20px;">
          <h1 style="color: #007AFF; margin-bottom: 20px;">AptPay</h1>
          <p style="color: #6c757d; margin-bottom: 20px;">Your DeFi Trading Platform on Aptos</p>
          <p style="color: #dc3545; font-size: 14px;">Failed to load application. Please refresh the page.</p>
          <button onclick="window.location.reload()" style="margin-top: 20px; padding: 10px 20px; background: #007AFF; color: white; border: none; border-radius: 5px; cursor: pointer;">Refresh</button>
        </div>
      \`;
    };
    document.head.appendChild(script);
    
    // Fallback timeout
    setTimeout(() => {
      if (document.getElementById('root').innerHTML.includes('loading')) {
        document.getElementById('root').innerHTML = \`
          <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; text-align: center; padding: 20px;">
            <h1 style="color: #007AFF; margin-bottom: 20px;">AptPay</h1>
            <p style="color: #6c757d; margin-bottom: 20px;">Your DeFi Trading Platform on Aptos</p>
            <p style="color: #6c757d; font-size: 14px;">Loading your AptPay application...</p>
            <div class="spinner" style="margin-top: 20px;"></div>
            <p style="color: #6c757d; font-size: 12px; margin-top: 20px;">If this takes too long, please refresh the page</p>
          </div>
        \`;
      }
    }, 10000);
  </script>
</body>
</html>
EOF
          echo "‚úÖ Created index.html for Metro bundler project"
        else
          echo "‚úÖ index.html already exists"
        fi
        
        # Verify build structure
        echo "üìÅ Build contents:"
        find dist -type f | head -10
        
        if [ -f "dist/index.html" ]; then
          echo "‚úÖ index.html found"
        else
          echo "‚ùå index.html not found"
          exit 1
        fi
        
        echo "üéâ AptPay build completed successfully!"
        
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Deploy to Vercel
      run: |
        vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Output deployment URL
      run: |
        echo "üöÄ Your AptPay project has been deployed!"
        echo "Check your Vercel dashboard for the deployment URL"