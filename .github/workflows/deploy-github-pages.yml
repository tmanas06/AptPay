name: Deploy AptPay to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps
        
    - name: Configure Expo for web
      run: |
        # Update app.json to use metro bundler for web
        node -e "
        const fs = require('fs');
        const appJson = JSON.parse(fs.readFileSync('app.json', 'utf8'));
        if (!appJson.expo.web) appJson.expo.web = {};
        appJson.expo.web.bundler = 'metro';
        appJson.expo.web.name = 'AptPay';
        appJson.expo.web.shortName = 'AptPay';
        appJson.expo.web.lang = 'en';
        appJson.expo.web.scope = '/';
        appJson.expo.web.themeColor = '#007AFF';
        appJson.expo.web.description = 'Advanced DeFi trading platform on Aptos blockchain';
        appJson.expo.web.dir = 'ltr';
        appJson.expo.web.display = 'standalone';
        appJson.expo.web.orientation = 'portrait';
        appJson.expo.web.startUrl = '/';
        appJson.expo.web.backgroundColor = '#f8f9fa';
        fs.writeFileSync('app.json', JSON.stringify(appJson, null, 2));
        console.log('Updated app.json for web build');
        "
        
    - name: Build AptPay for web
      run: |
        echo "üöÄ Building AptPay for GitHub Pages..."
        
        # Clean previous builds
        rm -rf dist web-build
        
        # Build with Expo export
        echo "üì± Building with Expo export..."
        npx expo export --platform web --output-dir dist || {
          echo "‚ö†Ô∏è Expo export had errors, but checking if build was created..."
          if [ -d "dist" ] && ([ -d "dist/bundles" ] || [ -f "dist/index.html" ]); then
            echo "‚úÖ Build was created despite errors - continuing..."
          else
            echo "‚ùå Build failed completely"
            exit 1
          fi
        }
        
        # Check if index.html exists, if not create it
        if [ ! -f "dist/index.html" ]; then
          echo "üìù Creating index.html for Metro bundler project..."
          
          # Find the actual bundle file
          BUNDLE_FILE="index.web.js"
          if [ -d "dist/bundles" ]; then
            BUNDLE_FILE=$(find dist/bundles -name "*.js" | head -1 | xargs basename)
          fi
          echo "Found bundle file: $BUNDLE_FILE"
          
          # Create index.html using echo commands
          echo '<!DOCTYPE html>' > dist/index.html
          echo '<html lang="en">' >> dist/index.html
          echo '<head>' >> dist/index.html
          echo '  <meta charset="utf-8">' >> dist/index.html
          echo '  <meta name="viewport" content="width=device-width, initial-scale=1">' >> dist/index.html
          echo '  <title>AptPay - DeFi Trading Platform</title>' >> dist/index.html
          echo '  <meta name="description" content="Advanced DeFi trading platform on Aptos blockchain">' >> dist/index.html
          echo '  <meta name="theme-color" content="#007AFF">' >> dist/index.html
          echo '  <link rel="icon" href="./assets/favicon.png">' >> dist/index.html
          echo '  <style>' >> dist/index.html
          echo '    body { margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", sans-serif; background: #f8f9fa; }' >> dist/index.html
          echo '    #root { width: 100%; height: 100vh; }' >> dist/index.html
          echo '    .loading { display: flex; justify-content: center; align-items: center; height: 100vh; background: #f8f9fa; }' >> dist/index.html
          echo '    .spinner { width: 40px; height: 40px; border: 4px solid #e9ecef; border-top: 4px solid #007AFF; border-radius: 50%; animation: spin 1s linear infinite; }' >> dist/index.html
          echo '    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }' >> dist/index.html
          echo '  </style>' >> dist/index.html
          echo '</head>' >> dist/index.html
          echo '<body>' >> dist/index.html
          echo '  <div id="root"><div class="loading"><div class="spinner"></div></div></div>' >> dist/index.html
          echo '  <script>' >> dist/index.html
          echo '    window.__expo = window.__expo || {};' >> dist/index.html
          echo '    window.__expo.web = window.__expo.web || {};' >> dist/index.html
          echo "    window.__expo.web.bundleUrl = './bundles/$BUNDLE_FILE';" >> dist/index.html
          echo '    const script = document.createElement("script");' >> dist/index.html
          echo "    script.src = './bundles/$BUNDLE_FILE';" >> dist/index.html
          echo '    script.onload = () => console.log("AptPay Metro bundle loaded successfully");' >> dist/index.html
          echo '    script.onerror = () => document.getElementById("root").innerHTML = "<div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; text-align: center; padding: 20px;\"><h1 style=\"color: #007AFF; margin-bottom: 20px;\">AptPay</h1><p style=\"color: #6c757d; margin-bottom: 20px;\">Your DeFi Trading Platform on Aptos</p><p style=\"color: #dc3545; font-size: 14px;\">Failed to load application. Please refresh the page.</p><button onclick=\"window.location.reload()\" style=\"margin-top: 20px; padding: 10px 20px; background: #007AFF; color: white; border: none; border-radius: 5px; cursor: pointer;\">Refresh</button></div>";' >> dist/index.html
          echo '    document.head.appendChild(script);' >> dist/index.html
          echo '  </script>' >> dist/index.html
          echo '</body>' >> dist/index.html
          echo '</html>' >> dist/index.html
          
          echo "‚úÖ Created index.html for Metro bundler project"
        else
          echo "‚úÖ index.html already exists"
        fi
        
        # Verify build structure
        echo "üìÅ Build contents:"
        find dist -type f | head -10
        
        if [ -f "dist/index.html" ]; then
          echo "‚úÖ index.html found"
        else
          echo "‚ùå index.html not found"
          exit 1
        fi
        
        echo "üéâ AptPay build completed successfully!"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
